plugins {
	id 'org.springframework.boot' version '2.2.8.BUILD-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'nu.studer.jooq' version '4.1'
	id 'com.google.cloud.tools.jib' version '1.8.0'
}

group = 'com.exigent'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('azureVersion', "2.2.0")
	set('springCloudVersion', "Hoxton.SR4")
}

dependencies {
	compileOnly "org.projectlombok:lombok"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'com.microsoft.azure:azure-spring-boot-starter'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
//	implementation 'org.springframework.cloud:spring-cloud-config-client'
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
//	implementation 'com.microsoft.azure:spring-cloud-starter-azure-spring-cloud-client'
	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly('mysql:mysql-connector-java')
	jooqRuntime('mysql:mysql-connector-java')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

dependencyManagement {
	imports {
		mavenBom "com.microsoft.azure:azure-spring-boot-bom:${azureVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
task jooqGen {
	dependsOn += 'generateServiceJooqSchemaSource'
}
jooq {
	version = '3.12.4'
	generateSchemaSourceOnCompilation = false

	service(sourceSets.main) {
		jdbc {
			driver = 'com.mysql.cj.jdbc.Driver'
			url = 'jdbc:mysql://127.0.0.1:3306/verifycore'
			user = 'root'
			password = ''
			properties {
				property {
					// No need for SSL on localhost when generating sources, so it's ok to suppress the warnings
					key = 'useSSL'
					value = 'false'
				}
			}
		}

		generator {
			name = 'org.jooq.codegen.DefaultGenerator'

			database {
				name = 'org.jooq.meta.mysql.MySQLDatabase'
				inputSchema = 'verifycore'
				outputSchemaToDefault = true
				excludes = 'DATABASECHANGELOG|DATABASECHANGELOGLOCK|ACT_.*'
			}

			generate {
				relations = false
				deprecated = false
				records = true
				pojos = true
				daos = true
				springAnnotations = true
				javaTimeTypes = true
				fluentSetters = true
				pojosEqualsAndHashCode = true
			}

			target {
				packageName = 'com.exigent.verifycore.db.jooq'
				directory = 'src/generated-db-entities/java/'
			}
		}
	}
}